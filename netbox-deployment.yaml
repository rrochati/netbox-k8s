apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox
  namespace: netbox-k8s
  labels:
    k8s-app: netbox
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: netbox
  template:
    metadata:
      labels:
        k8s-app: netbox
    spec:
      containers:
      - name: netbox
        image: quay.io/netboxcommunity/netbox:v2.11.12-ldap
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
          requests:
            memory: "128Mi"
            cpu: "250m"
        ports:
        - name: http
          containerPort: 8080
        readinessProbe: # will mark the pod as ready once the initialization script is completed and will probe every 20 seconds
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 30
        envFrom:
          - configMapRef:
              name: netbox-configmap
        lifecycle: # Will run the post-startup scripts detailed in netbox-startup-configmap.yaml
          postStart:
            exec:
              command:
                - /bin/sh
                - -c
                - >
                  bash /home/install-plugins.sh &&
                  bash /home/start-rqworker.sh &&
                  bash /home/nginx-caching-fix.sh
        volumeMounts:
        - name: db-secret
          mountPath: /run/secrets/db_password
          subPath: db_password
          readOnly: true
        - name: secret-key
          mountPath: /run/secrets/secret_key
          subPath: secret_key
          readOnly: true
        - name: superuser-api-token
          mountPath: /run/secrets/superuser_api_token
          subPath: superuser_api_token
        - name: superuser-password
          mountPath: /run/secrets/superuser_password
          subPath: superuser_password
          readOnly: true
        - mountPath: /home/install-plugins.sh
          name: install-plugins
          subPath: install-plugins.sh
        - mountPath: /home/start-rqworker.sh
          name: start-rqworker
          subPath: start-rqworker.sh
        - mountPath: /home/nginx-caching-fix.sh
          name: nginx-caching-fix
          subPath: nginx-caching-fix.sh
        - name: sso-saml2-xml
          mountPath: /opt/netbox/sso-saml2.xml
          subPath: sso-saml2-metadata.xml
        - name: secrets-store01-inline
          mountPath: "/mnt/secrets-store"
        - name: secrets-store02-inline
          mountPath: "/mnt/secrets-store2"
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: netbox-plugins
        configMap:
          name: startup-configmap
          items:
          - key: "netbox-plugins.py"
            path: "netbox-plugins.py"
      - name: install-plugins
        configMap:
          name: startup-configmap
          items:
          - key: "install-plugins.sh"
            path: "install-plugins.sh"
      - name: start-rqworker
        configMap:
          name: startup-configmap
          items:
          - key: "start-rqworker.sh"
            path: "start-rqworker.sh"
      - name: nginx-caching-fix
        configMap:
          name: startup-configmap
          items:
          - key: "nginx-caching-fix.sh"
            path: "nginx-caching-fix.sh"
      - name: sso-saml2-xml
        configMap:
          name: sso-saml2-xml
          items:
            - key: sso-saml2-metadata.xml
              path: sso-saml2-metadata.xml
      # Populate via secret
      - name: secrets-store01-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: netbox-secret-store
      - name: secrets-store02-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: db-secret-store
      - name: auth-ldap-bind-password
        secret:
          secretName: netbox-secret-k8s
          items:
          - key: auth_ldap_bind_password
            path: auth_ldap_bind_password
      - name: db-secret
        secret:
          secretName: db-secret-k8s
          items:
          - key: db_password
            path: db_password
      - name: email-password
        secret:
          secretName: netbox-secret-k8s
          items:
          - key: email_password
            path: email_password
      - name: napalm-password
        secret:
          secretName: netbox-secret-k8s
          items:
          - key: napalm_password
            path: napalm_password
      - name: secret-key
        secret:
          secretName: netbox-secret-k8s
          items:
          - key: secret_key
            path: secret_key
      - name: superuser-password
        secret:
          secretName: netbox-secret-k8s
          items:
          - key: superuser_password
            path: superuser_password
      - name: superuser-api-token
        secret:
          secretName: netbox-secret-k8s
          items:
          - key: superuser_api_token
            path: superuser_api_token
---
apiVersion: v1
kind: Service
metadata:
  name: netbox
  namespace: netbox-k8s
  labels:
    k8s-app: netbox
spec:
  ports:
  - port: 8080
    targetPort: http
  selector:
    k8s-app: netbox
  type: LoadBalancer