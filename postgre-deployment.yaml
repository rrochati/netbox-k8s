apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: postgre
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:15.0 
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "100Mi"
            cpu: "250m"
        ports:
        - containerPort: 5432
        livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 3 # Number of seconts after the container start to start polling
            periodSeconds: 10 # Time interval between checks
            failureThreshold: 3 # Number of fails to consiger the app unhealthy
            successThreshold: 1 # Number os successes to clear the failureThreshold (default 1)
            timeoutSeconds: 3 # Call timeout
            terminationGracePeriodSeconds: 30
        envFrom:
        - secretRef:
            name: postgre-secret-k8s
        env:
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: db-vol
          mountPath: "/var/lib/postgresql/data"
          subPath: "pgdata"
        - name: secrets-store01-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: pg-secret-store
        - name: db-vol
          persistentVolumeClaim:
            claimName: postgre-pvc
# ---
# An ubuntu pod if you need any troubleshot
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ubuntu
#   namespace: postgre
# spec:
#   selector:
#     matchLabels:
#       app: ubuntu
#   template:
#     metadata:
#       labels:
#         app: ubuntu
#     spec:
#       containers:
#       - name: ubuntu
#         image: ubuntu:latest
#         args:
#           - sleep
#           - infinity
#         resources:
#           limits:
#             memory: "128Mi"
#             cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: postgre
spec:
  type: ClusterIP # Service exposed for the k8s cluster only. If you want to access externally, change to LoadBalancer
  selector:
    app: postgresql
  ports:
  - name: db-port
    protocol: TCP
    port: 5432
    targetPort: 5432
  